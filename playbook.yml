---
- hosts: all
  become: yes
  vars:
    default_org: "Default Organization"
  vars_files:
    - vars.yml
  tasks:
    - name: Uploading manifest 
      shell:  hammer subscription upload  
        --file /tmp/manifest_satellite-vm.zip 
        --organization "Default Organization"
      ignore_errors: yes
      tags:
        - satellite
        - manifest
        
    
    - name: Setting up satellite repository
      shell:  hammer repository-set enable 
        --organization "{{item.organization}}" 
        --product "{{item.product}}" 
        --basearch "{{item.basearch}}" 
        --name "{{item.name}}"
        --releasever "{{item.releasever}}"
      ignore_errors: yes
      when: item.releasever is defined
      loop: "{{ satellite_repository }}"
      tags:
        - loop

    - name: Setting up satellite repository
      shell:  hammer repository-set enable 
        --organization "{{item.organization}}" 
        --product "{{item.product}}" 
        --basearch "{{item.basearch}}" 
        --name "{{item.name}}"
      ignore_errors: yes
      when: item.releasever is not defined
      loop: "{{ satellite_repository }}"
      tags:
        - loop
    
    - name: Sync repo
      shell: hammer repository synchronize 
        --organization "{{item.organization}}" 
        --product "{{item.product}}" 
        --name "{{item.sync_name}}"
        --async
      loop: "{{ satellite_repository }}"
      tags:
        - sync

    - name: Create activation key
      shell:  hammer activation-key create 
        --name "test2key" 
        --unlimited-content-hosts true 
        --description "Exampleware Stack in the Development Environment" 
        --lifecycle-environment " Library" 
        --content-view "Stack"  
        --organization "Default Organization"


    - name: Listing repository
      shell:  'hammer --output json  repository list --organization "{{default_org}}" |grep Id'
      register: repo_list
      tags: repo


    - debug: 
        msg: "{{ item.split(':')[1].split(',')[0] }}"
      loop: "{{repo_list.stdout_lines}}"
      tags: repo
    - name: Create Content-view
      shell: hammer content-view create --name "test1 content view"  --organization "Default Organization"
      tags:
        - view

    - name: adding repo to content-view
      shell: hammer content-view add-repository
          --organization "{{ default_org }}"
          --name "test1 content view"
          --repository-id  "{{ item.split(':')[1].split(',')[0] }}"
      loop: "{{repo_list.stdout_lines}}"
      tags: repo









