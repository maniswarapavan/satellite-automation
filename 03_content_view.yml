---
- name: Fetching list of available Content-Views name
  shell: hammer --output cve content-view list --organization "{{ORG}}" |grep Name
  register: content_view_list

- name: Creating custom fact from list of available Content-Views name
  set_fact: 
    content_view_exist: "{{ content_view_exist + [item.split(':')[1].lstrip(' ')]}}"
  loop: "{{content_view_list.stdout_lines}}"

# - name: Print fact
#   debug: var=content_view_exist

- name: Creating Content-view if not exist
  shell: hammer content-view create --name "{{CONTENT_VIEW_NAME}}"  --organization "{{ORG}}"
  when: CONTENT_VIEW_NAME not in content_view_exist
  tags:
    - satellite_configuration
    - content-view
#######################################
- name: Fetching enabled Repo IDs list from subscription of {{ORG}}
  shell:  'hammer --output cve  repository list --organization "{{ORG}}" |grep Id'
  register: repo_list
  tags: 
    - satellite_configuration
    - content-view

- name: Creating fact with enabled Repo IDs list from subscription of {{ORG}}
  set_fact:
    sub_repos_name_exist: "{{ sub_repos_name_exist + [ item.split(':')[1].lstrip(' ')] }}"
  loop: "{{repo_list.stdout_lines}}"

# - name: list of enabled repo ID in subscription
#   debug: var=sub_repos_name_exist
######################################

- name: Fetching existing Repository IDs list from Content-View
  shell: hammer --output cve content-view list --organization "{{ORG}}" --name  "{{CONTENT_VIEW_NAME}}" |grep "Repository IDs"
  register: content_view_repos_list

- name: Creating facts with existing Repository IDs list from Content-View
  set_fact:
    content_view_repos_exist: "{{ content_view_repos_exist + [item.lstrip(' ')]}}"
  loop: "{{ content_view_repos_list.stdout_lines[0].split(':')[1].split(',') }}"

# - name: list existing repos in content view 
#   debug: var=content_view_repos_exist

- name: adding repo to content-view
  shell: hammer content-view add-repository
      --organization "{{ORG}}"
      --name "{{CONTENT_VIEW_NAME}}"
      --repository-id  "{{ item }}"
  when: item  not in content_view_repos_exist 
  loop: "{{ sub_repos_name_exist }}"
  tags: 
    - satellite_configuration
    - content-view

- name: Publishing content-view
  shell: hammer content-view publish
      --organization "{{ORG}}"
      --name "{{CONTENT_VIEW_NAME}}"
      --async
  ignore_errors: yes
  tags: 
    - satellite_configuration
    - content-view
